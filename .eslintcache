[{"/Users/skylerkuretza/Sites/Projects/portfolio/src/index.js":"1","/Users/skylerkuretza/Sites/Projects/portfolio/src/reportWebVitals.js":"2","/Users/skylerkuretza/Sites/Projects/portfolio/src/App.js":"3","/Users/skylerkuretza/Sites/Projects/portfolio/src/Clock/clock.js":"4","/Users/skylerkuretza/Sites/Projects/portfolio/src/Timer/timer.js":"5","/Users/skylerkuretza/Sites/Projects/portfolio/src/Utilities/AppContext.js":"6","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/mindread.js":"7","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page0.js":"8","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page2.js":"9","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page1.js":"10","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page3.js":"11","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page4.js":"12","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page5.js":"13","/Users/skylerkuretza/Sites/Projects/portfolio/src/Weather/weather.js":"14","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/Todo.js":"15","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListInput.js":"16","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListItems.js":"17","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListBottomButtons.js":"18","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListTopButtons.js":"19","/Users/skylerkuretza/Sites/Projects/portfolio/src/PuzzleSlider/PuzzleSlider.js":"20","/Users/skylerkuretza/Sites/Projects/portfolio/src/PuzzleSlider/Tile.js":"21","/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Game.js":"22","/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Board.js":"23","/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Square.js":"24","/Users/skylerkuretza/Sites/Projects/portfolio/src/Calculator/Calc.js":"25"},{"size":500,"mtime":1607605741980,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1607605741981,"results":"28","hashOfConfig":"27"},{"size":3988,"mtime":1608583237666,"results":"29","hashOfConfig":"27"},{"size":485,"mtime":1607612679500,"results":"30","hashOfConfig":"27"},{"size":2404,"mtime":1607612594446,"results":"31","hashOfConfig":"27"},{"size":145,"mtime":1607607167344,"results":"32","hashOfConfig":"27"},{"size":836,"mtime":1607612276027,"results":"33","hashOfConfig":"27"},{"size":405,"mtime":1607612641198,"results":"34","hashOfConfig":"27"},{"size":597,"mtime":1607612620069,"results":"35","hashOfConfig":"27"},{"size":496,"mtime":1607612613548,"results":"36","hashOfConfig":"27"},{"size":590,"mtime":1607612625562,"results":"37","hashOfConfig":"27"},{"size":1260,"mtime":1607612631455,"results":"38","hashOfConfig":"27"},{"size":443,"mtime":1607612635271,"results":"39","hashOfConfig":"27"},{"size":1492,"mtime":1607612697557,"results":"40","hashOfConfig":"27"},{"size":2552,"mtime":1607614227875,"results":"41","hashOfConfig":"27"},{"size":1704,"mtime":1607614185711,"results":"42","hashOfConfig":"27"},{"size":4356,"mtime":1607614185952,"results":"43","hashOfConfig":"27"},{"size":1885,"mtime":1607614185230,"results":"44","hashOfConfig":"27"},{"size":826,"mtime":1607614186313,"results":"45","hashOfConfig":"27"},{"size":4039,"mtime":1607614422304,"results":"46","hashOfConfig":"27"},{"size":1051,"mtime":1607614382835,"results":"47","hashOfConfig":"27"},{"size":1762,"mtime":1608582027091,"results":"48","hashOfConfig":"27"},{"size":484,"mtime":1608582238314,"results":"49","hashOfConfig":"27"},{"size":253,"mtime":1608582134617,"results":"50","hashOfConfig":"27"},{"size":3261,"mtime":1608583373299,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"wv1fgg",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/skylerkuretza/Sites/Projects/portfolio/src/index.js",[],["115","116"],"/Users/skylerkuretza/Sites/Projects/portfolio/src/reportWebVitals.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/App.js",["117","118"],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Clock/clock.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Timer/timer.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Utilities/AppContext.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/mindread.js",["119","120"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\nimport Page0 from './page0'\nimport Page1 from './page1'\nimport Page2 from './page2'\nimport Page3 from './page3'\nimport Page4 from './page4'\nimport Page5 from './page5'\n\nfunction MindReader() {\n\n    const [page, setPage] = useState(0);\n    const [randomSymbol, setRandomSymbol] = useState('');\n\n    return (\n        <AppProvider value = {{page, setPage, randomSymbol, setRandomSymbol}}>\n        <div className='text-center'>\n          {page === 0 && <Page0 />}\n          {page === 1 && <Page1 />}\n          {page === 2 && <Page2 />}\n          {page === 3 && <Page3 />}\n          {page === 4 && <Page4 />}\n          {page === 5 && <Page5 />}\n\n        </div>\n        </AppProvider>\n    );\n}\n\nexport default MindReader;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page0.js",["121","122","123"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page0() {\n\n    const {setPage, page} = useContext(AppContext);\n\n    return (\n        <div>\n            <h1>I can read your mind!</h1>\n            <button className='btn btn-secondary'  onClick={() => setPage(1)}>Start!</button>\n        </div>\n    );\n}\n\nexport default Page0;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page2.js",["124","125","126"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page2() {\n\n    const {setPage, page} = useContext(AppContext);\n\n    return (\n        <div>\n            <h1>Add both digits together to get a new number</h1>\n            <button className='btn btn-secondary' onClick={() => setPage(3)}>Next</button>\n            <p>Ex: 14 is 1 + 4 = 5</p>\n            <p>Click next to proceed</p>\n            <button className='btn btn-secondary' onClick={() => setPage(0)}>Reset</button>\n        </div>\n    );\n}\n\nexport default Page2;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page1.js",["127","128","129"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page1() {\n\n    const {setPage, page} = useContext(AppContext);\n\n    return (\n        <div>\n            <h1>Pick a number form 01-99</h1>\n            <button className='btn btn-secondary' onClick={()=>setPage(2)}>Next!</button>\n            <button  className='btn btn-secondary' onClick={()=>setPage(0)}>Reset!</button>\n        </div>\n    );\n}\n\nexport default Page1;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page3.js",["130","131","132"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page3() {\n\n    const {setPage, page} = useContext(AppContext);\n\n    return (\n        <div>\n            <h1>Subtract your new number from the original</h1>\n            <button className='btn btn-secondary' onClick={() => setPage(4)}>Next</button>\n            <p>Ex: 14 - 5 = 9</p>\n            <p>Click next to proceed</p>\n            <button className='btn btn-secondary' onClick={() => setPage(0)}>Reset</button>\n        </div>\n    );\n}\n\nexport default Page3;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page4.js",["133","134","135"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page4() {\n\n    const { setPage, page, setRandomSymbol, randomSymbol } = useContext(AppContext);\n    const chars = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')'];\n    const ans = [];\n    setRandomSymbol(chars[Math.floor(Math.random() * 10)]);\n    let rightAnswer = randomSymbol;\n\n    for (let i = 0; i <= 99; i++) {\n        if (i % 9) {\n            let random = chars[Math.floor(Math.random() * 10)]\n            ans.push(i + \" - \" + random);\n        }\n        else {\n            ans.push(i + \" - \" + rightAnswer)\n        }\n    }\n\n    return (\n        <div className='container'>\n            <div className='ml-5 overflow-auto border' style={{height: 300, width: 350}}>\n                {ans.map((item) => {\n                    return <p> {item}</p>\n                }\n                )}\n            </div>\n            <button className='btn btn-secondary' onClick={() => setPage(5)}>Next</button>\n            <p>Find your new number</p>\n            <p>Note the symbol beside the number</p>\n            <button className='btn btn-secondary' onClick={() => setPage(0)}>Reset</button>\n        </div>\n    );\n}\n\nexport default Page4;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/MindReader/page5.js",["136","137","138"],"import React, { useState, useContext } from 'react';\nimport AppContext, { AppProvider } from '../Utilities/AppContext';\n\nfunction Page5() {\n\n    const {setPage, page, randomSymbol} = useContext(AppContext);\n\n    return (\n        <div>\n            <p>Your symbol is:</p>\n            <p>{randomSymbol}</p>\n            <button className='btn btn-secondary' onClick={() => setPage(0)}>Reset</button>\n        </div>\n    );\n}\n\nexport default Page5;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/Weather/weather.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/Todo.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListInput.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListItems.js",["139","140"],"import React from 'react';\n\nclass ListItems extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    //Reverse the done value and call update\n    handleCheck(index) {\n        let copy = this.props.toDoList\n        copy[index].done = !copy[index].done;\n        this.props.update(copy);\n    }\n\n    //if this is click then delete this from the array and call update\n    handleDelete(index) {\n        let copy = this.props.toDoList;\n        copy.splice(index, 1);\n        this.props.update(copy);\n    }\n\n    renderList() {\n\n    }\n\n    render() {\n        return (\n            //depending on the page swap between each thing\n            //map through each list item and have a input field with a checkBox\n            //display the name of the ToDo\n            //Add the delete button\n            <ul className='list-group mx-auto'>\n                {this.props.toDoList.map((item, index) => {\n                    if (this.props.pageNum === 0) {\n                        return (\n                            <li className='list-group-item  py-3' key={index}>\n                                <input\n                                    className='ml-auto float-left'\n                                    name='checkbox'\n                                    type='checkbox'\n                                    onChange={() => this.handleCheck(index)}\n                                    checked={item.done}\n                                    key={index}\n                                />\n\n                                <p className='text-center ml-5'\n                                    style={{ display: 'inline' }}\n                                > {item.name} </p>\n\n                                <button\n                                    className='btn btn-primary px-5 float-right'\n                                    onClick={() => this.handleDelete(index)}\n                                >delete</button>\n                            </li>\n                        )\n                    }\n                    else if (this.props.pageNum === 1 && item.done === false) {\n                        return (\n                            <li className='list-group-item py-3' key={index}>\n                                <input\n                                    className='ml-auto float-left'\n                                    name='checkbox'\n                                    type='checkbox'\n                                    onChange={() => this.handleCheck(index)}\n                                    checked={item.done}\n                                    key={index}\n                                />\n\n                                <p className='text-center ml-5'\n                                    style={{ display: 'inline' }}\n                                > {item.name} </p>\n\n                                <button\n                                    className='btn btn-primary px-5 float-right'\n                                    onClick={() => this.handleDelete(index)}\n                                >delete</button>\n                            </li>\n                        )\n                    }\n                    else if (this.props.pageNum === 2 && item.done === true) {\n                        return (\n                            <li className='list-group-item py-3' key={index}>\n                                <input\n                                    className='ml-auto float-left'\n                                    name='checkbox'\n                                    type='checkbox'\n                                    onChange={() => this.handleCheck(index)}\n                                    checked={item.done}\n                                    key={index}\n                                />\n\n                                <p className='text-center ml-5'\n                                    style={{ display: 'inline' }}\n                                > {item.name} </p>\n\n                                <button\n                                    className='btn btn-primary px-5 float-right'\n                                    onClick={() => this.handleDelete(index)}\n                                >delete</button>\n                            </li>\n                        )\n                    }\n                })}\n\n            </ul>\n        )\n    }\n}\n\nexport default ListItems;","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListBottomButtons.js",["141","142","143"],"import React from 'react';\n\nclass ListBottomButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    //change all done values to true\n    markDone() {\n        let copy = this.props.toDoList;\n        copy.map((item) => {\n            item.done = true;\n        })\n        this.props.update(copy);\n    }\n\n    //reset all done values to false\n    resetCheck() {\n        let copy = this.props.toDoList;\n        copy.map((item) => {\n            item.done = false;\n        })\n        this.props.update(copy);\n    }\n\n    //checks all done in the list then deletes them\n    deleteDone() {\n        let copy = this.props.toDoList;\n        for (let i = 0; i < copy.length; i++) {\n            if (copy[i].done === true) {\n                copy.splice(i, 1);\n                i--;\n            }\n        }\n        this.props.update(copy);\n    }\n\n    render() {\n        return (\n            //Display number of taks\n            //All the bottom buttons with their onClick functions defined above\n            <div>\n                <div className='pt-3'>\n                    <h4 className='text-center'>Number of Task: {this.props.toDoList.length}</h4>\n                </div>\n                <div className='text-center py-2'>\n                    <button\n                        onClick={() => this.markDone()}\n                        className='btn btn-primary'\n                    >Mark All Done</button>\n                    <button\n                        onClick={() => this.deleteDone()}\n                        className='btn btn-danger mx-3'\n                    >Delete All Done</button>\n                    <button\n                        onClick={() => this.resetCheck()}\n                        className='btn btn-primary'\n                    >Reset Check</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListBottomButtons;","/Users/skylerkuretza/Sites/Projects/portfolio/src/Todo/ListTopButtons.js",["144"],"import React from 'react';\n\nclass ListTopButtons extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            // Make a button that cahgnes the page\n            <div className='mx-auto pb-4 text-center'>\n                <button\n                    className='btn btn-primary'\n                    onClick={() => this.props.Page(0)}\n                > All </button>\n                <button\n                    className='btn btn-primary mx-2'\n                    onClick={() => this.props.Page(1)}\n                > In Progress</button>\n                <button\n                    className='btn btn-primary'\n                    onClick={() => this.props.Page(2)}\n                > Done</button>\n            </div>\n        )\n    }\n\n}\n\nexport default ListTopButtons;","/Users/skylerkuretza/Sites/Projects/portfolio/src/PuzzleSlider/PuzzleSlider.js",["145"],"import React from 'react'\nimport Tile from './Tile.js'\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      board: [\n        { pos: 0, correctPos: 0, click: false, empty: true },\n        { pos: 1, correctPos: 1, click: false, empty: false },\n        { pos: 2, correctPos: 2, click: false, empty: false },\n        { pos: 3, correctPos: 3, click: false, empty: false },\n        { pos: 4, correctPos: 4, click: false, empty: false },\n        { pos: 5, correctPos: 5, click: false, empty: false },\n        { pos: 6, correctPos: 6, click: false, empty: false },\n        { pos: 7, correctPos: 7, click: false, empty: false },\n        { pos: 8, correctPos: 8, click: false, empty: false },\n        { pos: 9, correctPos: 9, click: false, empty: false },\n        { pos: 10, correctPos: 10, click: false, empty: false },\n        { pos: 11, correctPos: 11, click: false, empty: false },\n        { pos: 12, correctPos: 12, click: false, empty: false },\n        { pos: 13, correctPos: 13, click: false, empty: false },\n        { pos: 14, correctPos: 14, click: false, empty: false },\n        { pos: 15, correctPos: 15, click: false, empty: false }],\n    }\n\n    // this.validMove = [];\n\n    this.checkWin = this.checkWin.bind(this);\n    // this.updateList = this.updateList.bind(this);\n    this.addClickEve = this.addClickEve.bind(this);\n    this.moveTile = this.moveTile.bind(this);\n  }\n\n  addClickEve() {\n    let empty = this.state.board.findIndex((item) => { return item.empty === true });\n    // this.validMove.length = 0;\n    let newBoard = this.state.board.map((item, index) => {\n      if (empty === 4 || empty === 8 || empty === 12) {\n        if (empty - 4 === index || empty + 4 === index || empty + 1 === index) {\n          item.click = true;\n          // this.validMove.push(item);\n        }\n        else {\n          item.click = false;\n        }\n      }\n      else if (empty === 3 || empty === 7 || empty === 11) {\n        if (empty - 4 === index || empty + 4 === index || empty - 1 === index) {\n          item.click = true;\n          // this.validMove.push(item);\n        }\n        else {\n          item.click = false;\n        }\n      }\n      else if (empty - 4 === index || empty + 4 === index || empty - 1 === index || empty + 1 === index) {\n        item.click = true;\n        // this.validMove.push(item);\n      }\n      else {\n        item.click = false;\n      }\n      return item;\n    })\n    this.setState({ board: newBoard })\n  }\n\n  // updateList(newList) {\n  //   this.setState({ board: newList })\n  // }\n\n  checkWin() {\n    for (let i = 0; i < this.state.board.length; i++) {\n      if (this.state.board[i].pos !== this.state.board[i].correctPos) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  shuffle() {\n    for (let i = 0; i < 500; i++) {\n      let movesArr = this.state.board.filter((item) => {\n        if (item.click) return item\n      })\n      let rand = (Math.floor(Math.random() * movesArr.length))\n      let move = this.state.board.findIndex((item) => item.correctPos === movesArr[rand].correctPos)\n      this.moveTile(move);\n    }\n    // this.setState({ board: newBoard })\n  }\n\n  moveTile(index) {\n    let empty = this.state.board.findIndex((item) => item.empty === true)\n    let copy = this.state.board;\n    let holder = this.state.board[empty].pos\n    copy[empty].pos = copy[index].pos;\n    copy[empty].empty = false;\n    copy[index].pos = holder;\n    copy[index].empty = true;\n    this.setState({ board: copy })\n    this.addClickEve();\n    // console.log(props.winCheck())\n  }\n\n\n  componentDidMount() {\n    this.addClickEve()\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row'>\n          <Tile\n            data={this.state.board}\n            update={this.moveTile}\n            checkWin={this.checkWin}\n          />\n          <button className='btn btn-primary' onClick={() => this.shuffle()}>Shuffle</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/skylerkuretza/Sites/Projects/portfolio/src/PuzzleSlider/Tile.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Game.js",["146"],"import React, {useState} from 'react';\nimport Board from './Board';\n\nfunction calculateWinner(squares){\n    const lines = [\n        [0,1,2],\n        [0,3,6],\n        [0,4,8],\n        [1,4,7],\n        [2,4,6],\n        [2,5,8],\n        [3,4,5],\n        [6,7,8]\n    ];\n    for (let i = 0; i < lines.length; i++){\n        const [a,b,c] = lines[i];\n        if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [step, setStep] = useState(0);\n    const [isNext, setIsNext] = useState(true);\n    const winner = calculateWinner(history[step]);\n\n    const handleClick = i => {\n        const time = history.slice(0, step + 1);\n        const current = time[step];\n        const squares = [...current];\n        if (winner || squares[i]) return;\n        squares[i] = isNext ? 'X' : 'O';\n        setHistory([...time, squares]);\n        setStep(time.length);\n        setIsNext(!isNext);\n    }\n\n    const next = stepper => {\n        setStep(stepper);\n        setIsNext(stepper % 2 === 0);\n    }\n\n    const renderMoves = () =>\n    history.map((_step, move) => {\n        const destination = move ? `Got to move #${move}` : `Go to Start`;\n        return (\n            <li key={move}>\n                <button className= \"btn btn-primary text-white\" onClick={() => next(move)}>{destination}</button>\n            </li>\n        );\n    });\n\n    return(\n        <div>\n            <Board squares={history[step]} onClick={handleClick} />\n            <div>\n                {winner ? `Winner: ${winner}` : `Next Player: ${isNext ? 'X' : 'O'}`}\n            </div>\n        </div>\n    )\n}\nexport default Game;","/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Board.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/TicTacToe/Square.js",[],"/Users/skylerkuretza/Sites/Projects/portfolio/src/Calculator/Calc.js",["147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":8,"nodeType":"154","messageId":"155","endLine":1,"endColumn":12},{"ruleId":"152","severity":1,"message":"156","line":12,"column":17,"nodeType":"154","messageId":"155","endLine":12,"endColumn":25},{"ruleId":"152","severity":1,"message":"157","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":37},{"ruleId":"152","severity":1,"message":"158","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":18},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":21,"nodeType":"154","messageId":"155","endLine":6,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":21,"nodeType":"154","messageId":"155","endLine":6,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":21,"nodeType":"154","messageId":"155","endLine":6,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":21,"nodeType":"154","messageId":"155","endLine":6,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":22,"nodeType":"154","messageId":"155","endLine":6,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":2,"column":22,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"160","line":6,"column":21,"nodeType":"154","messageId":"155","endLine":6,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":5,"column":5,"nodeType":"163","messageId":"164","endLine":7,"endColumn":6},{"ruleId":"165","severity":1,"message":"166","line":34,"column":56,"nodeType":"167","messageId":"168","endLine":34,"endColumn":58},{"ruleId":"161","severity":1,"message":"162","line":5,"column":5,"nodeType":"163","messageId":"164","endLine":7,"endColumn":6},{"ruleId":"165","severity":1,"message":"169","line":13,"column":25,"nodeType":"167","messageId":"170","endLine":13,"endColumn":27},{"ruleId":"165","severity":1,"message":"169","line":22,"column":25,"nodeType":"167","messageId":"170","endLine":22,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":5,"column":5,"nodeType":"163","messageId":"164","endLine":7,"endColumn":6},{"ruleId":"165","severity":1,"message":"171","line":87,"column":53,"nodeType":"167","messageId":"168","endLine":87,"endColumn":55},{"ruleId":"152","severity":1,"message":"172","line":46,"column":11,"nodeType":"154","messageId":"155","endLine":46,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":21,"column":23,"nodeType":"175","messageId":"176","endLine":21,"endColumn":27},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'AppContext' is defined but never used.","'AppProvider' is defined but never used.","'page' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'renderMoves' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]